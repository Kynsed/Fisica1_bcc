import { CoordMap } from "../CoordMap.js";
import { DoubleRect } from "../../util/DoubleRect.js";
import { ScreenRect } from "../ScreenRect.js";
import { Vector } from "../../util/Vector.js";
import { schedule, startTest, assertThrows, assertTrue, assertRoughlyEquals } from "../../../test/TestRig.js";
export default function scheduleTests() {
    schedule(testCoordMap);
}
;
const groupName = 'CoordMapTest.';
function testCoordMap() {
    startTest(groupName + 'testCoordMap');
    var tol = 1E-13;
    var screenRect1 = new ScreenRect(0, 0, 500, 300);
    var screenRect2;
    var simRect1 = new DoubleRect(-10, -10, 10, 10);
    var simRect2;
    var map = CoordMap.make(screenRect1, simRect1, "LEFT", "FULL");
    var at = map.getAffineTransform();
    var scale = 300 / 20;
    assertRoughlyEquals(scale, map.getScaleX(), tol);
    assertRoughlyEquals(scale, map.getScaleY(), tol);
    var v0 = Vector.ORIGIN;
    var v1 = map.simToScreen(v0);
    var v2 = new Vector(150, 150);
    assertTrue(v1.nearEqual(v2, tol));
    assertTrue(map.screenToSim(v1).nearEqual(v0, tol));
    assertTrue(map.screenToSim(v2).nearEqual(v0, tol));
    assertTrue(at.transform(v0).nearEqual(v2, tol));
    assertRoughlyEquals(150, map.simToScreenX(0), tol);
    assertRoughlyEquals(150, map.simToScreenY(0), tol);
    v0 = new Vector(10, 10);
    v1 = map.simToScreen(v0);
    v2 = new Vector(300, 0);
    assertTrue(v1.nearEqual(v2, tol));
    assertTrue(map.screenToSim(v1).nearEqual(v0, tol));
    assertTrue(map.screenToSim(v2).nearEqual(v0, tol));
    assertTrue(at.transform(v0).nearEqual(v2, tol));
    v0 = new Vector(10, -10);
    v1 = map.simToScreen(v0);
    v2 = new Vector(300, 300);
    assertTrue(v1.nearEqual(v2, tol));
    assertTrue(map.screenToSim(v1).nearEqual(v0, tol));
    assertTrue(map.screenToSim(v2).nearEqual(v0, tol));
    assertTrue(at.transform(v0).nearEqual(v2, tol));
    v0 = new Vector(-10, -10);
    v1 = map.simToScreen(v0);
    v2 = new Vector(0, 300);
    assertTrue(v1.nearEqual(v2, tol));
    assertTrue(map.screenToSim(v1).nearEqual(v0, tol));
    assertTrue(map.screenToSim(v2).nearEqual(v0, tol));
    assertTrue(at.transform(v0).nearEqual(v2, tol));
    v0 = new Vector(-10, 10);
    v1 = map.simToScreen(v0);
    v2 = new Vector(0, 0);
    assertTrue(v1.nearEqual(v2, tol));
    assertTrue(map.screenToSim(v1).nearEqual(v0, tol));
    assertTrue(map.screenToSim(v2).nearEqual(v0, tol));
    assertTrue(at.transform(v0).nearEqual(v2, tol));
    screenRect2 = map.simToScreenRect(simRect1);
    assertRoughlyEquals(0, screenRect2.getLeft(), tol);
    assertRoughlyEquals(0, screenRect2.getTop(), tol);
    assertRoughlyEquals(300, screenRect2.getWidth(), tol);
    assertRoughlyEquals(300, screenRect2.getHeight(), tol);
    assertRoughlyEquals(0, map.screenToSimX(150), tol);
    assertRoughlyEquals(0, map.screenToSimY(150), tol);
    assertTrue(map.screenToSim(150, 150).nearEqual(Vector.ORIGIN, tol));
    simRect2 = map.screenToSimRect(screenRect2);
    assertTrue(simRect2.nearEqual(simRect1, tol));
    assertRoughlyEquals(150, map.simToScreenScaleX(10), tol);
    assertRoughlyEquals(150, map.simToScreenScaleY(10), tol);
    assertRoughlyEquals(10, map.screenToSimScaleX(150), tol);
    assertRoughlyEquals(10, map.screenToSimScaleY(150), tol);
    map = CoordMap.make(screenRect1, simRect1, "RIGHT", "FULL");
    at = map.getAffineTransform();
    assertRoughlyEquals(scale, map.getScaleX(), tol);
    assertRoughlyEquals(scale, map.getScaleY(), tol);
    assertTrue(map.simToScreen(Vector.ORIGIN).nearEqual(new Vector(350, 150), tol));
    assertTrue(at.transform(Vector.ORIGIN).nearEqual(new Vector(350, 150), tol));
    assertRoughlyEquals(350, map.simToScreenX(0), tol);
    assertRoughlyEquals(150, map.simToScreenY(0), tol);
    assertTrue(at.transform(new Vector(10, 10)).nearEqual(new Vector(500, 0), tol));
    assertTrue(map.simToScreen(new Vector(10, 10)).nearEqual(new Vector(500, 0), tol));
    assertTrue(map.simToScreen(new Vector(10, -10)).nearEqual(new Vector(500, 300), tol));
    assertTrue(map.simToScreen(new Vector(-10, -10)).nearEqual(new Vector(200, 300), tol));
    assertTrue(map.simToScreen(new Vector(-10, 10)).nearEqual(new Vector(200, 0), tol));
    screenRect2 = map.simToScreenRect(simRect1);
    assertRoughlyEquals(200, screenRect2.getLeft(), tol);
    assertRoughlyEquals(0, screenRect2.getTop(), tol);
    assertRoughlyEquals(300, screenRect2.getWidth(), tol);
    assertRoughlyEquals(300, screenRect2.getHeight(), tol);
    assertRoughlyEquals(0, map.screenToSimX(350), tol);
    assertRoughlyEquals(0, map.screenToSimY(150), tol);
    assertTrue(map.screenToSim(350, 150).nearEqual(Vector.ORIGIN, tol));
    simRect2 = map.screenToSimRect(screenRect2);
    assertTrue(simRect2.nearEqual(simRect1, tol));
    assertRoughlyEquals(150, map.simToScreenScaleX(10), tol);
    assertRoughlyEquals(150, map.simToScreenScaleY(10), tol);
    assertRoughlyEquals(10, map.screenToSimScaleX(150), tol);
    assertRoughlyEquals(10, map.screenToSimScaleY(150), tol);
    map = CoordMap.make(screenRect1, simRect1, "MIDDLE", "MIDDLE");
    at = map.getAffineTransform();
    assertRoughlyEquals(scale, map.getScaleX(), tol);
    assertRoughlyEquals(scale, map.getScaleY(), tol);
    assertTrue(map.simToScreen(Vector.ORIGIN).nearEqual(new Vector(250, 150), tol));
    assertTrue(at.transform(Vector.ORIGIN).nearEqual(new Vector(250, 150), tol));
    assertRoughlyEquals(250, map.simToScreenX(0), tol);
    assertRoughlyEquals(150, map.simToScreenY(0), tol);
    assertTrue(at.transform(new Vector(10, 10)).nearEqual(new Vector(400, 0), tol));
    assertTrue(map.simToScreen(new Vector(10, 10)).nearEqual(new Vector(400, 0), tol));
    assertTrue(map.simToScreen(new Vector(10, -10)).nearEqual(new Vector(400, 300), tol));
    assertTrue(map.simToScreen(new Vector(-10, -10)).nearEqual(new Vector(100, 300), tol));
    assertTrue(map.simToScreen(new Vector(-10, 10)).nearEqual(new Vector(100, 0), tol));
    screenRect2 = map.simToScreenRect(simRect1);
    assertRoughlyEquals(100, screenRect2.getLeft(), tol);
    assertRoughlyEquals(0, screenRect2.getTop(), tol);
    assertRoughlyEquals(300, screenRect2.getWidth(), tol);
    assertRoughlyEquals(300, screenRect2.getHeight(), tol);
    assertRoughlyEquals(0, map.screenToSimX(250), tol);
    assertRoughlyEquals(0, map.screenToSimY(150), tol);
    assertTrue(map.screenToSim(250, 150).nearEqual(Vector.ORIGIN, tol));
    simRect2 = map.screenToSimRect(screenRect2);
    assertTrue(simRect2.nearEqual(simRect1, tol));
    assertRoughlyEquals(150, map.simToScreenScaleX(10), tol);
    assertRoughlyEquals(150, map.simToScreenScaleY(10), tol);
    assertRoughlyEquals(10, map.screenToSimScaleX(150), tol);
    assertRoughlyEquals(10, map.screenToSimScaleY(150), tol);
    map = CoordMap.make(screenRect1, simRect1, "FULL", "FULL");
    at = map.getAffineTransform();
    assertRoughlyEquals(500 / 20, map.getScaleX(), tol);
    assertRoughlyEquals(300 / 20, map.getScaleY(), tol);
    assertTrue(map.simToScreen(Vector.ORIGIN).nearEqual(new Vector(250, 150), tol));
    assertTrue(at.transform(Vector.ORIGIN).nearEqual(new Vector(250, 150), tol));
    assertRoughlyEquals(250, map.simToScreenX(0), tol);
    assertRoughlyEquals(150, map.simToScreenY(0), tol);
    assertTrue(at.transform(new Vector(10, 10)).nearEqual(new Vector(500, 0), tol));
    assertTrue(map.simToScreen(new Vector(10, 10)).nearEqual(new Vector(500, 0), tol));
    assertTrue(map.simToScreen(new Vector(10, -10)).nearEqual(new Vector(500, 300), tol));
    assertTrue(map.simToScreen(new Vector(-10, -10)).nearEqual(new Vector(0, 300), tol));
    assertTrue(map.simToScreen(new Vector(-10, 10)).nearEqual(new Vector(0, 0), tol));
    screenRect2 = map.simToScreenRect(simRect1);
    assertRoughlyEquals(0, screenRect2.getLeft(), tol);
    assertRoughlyEquals(0, screenRect2.getTop(), tol);
    assertRoughlyEquals(500, screenRect2.getWidth(), tol);
    assertRoughlyEquals(300, screenRect2.getHeight(), tol);
    assertRoughlyEquals(0, map.screenToSimX(250), tol);
    assertRoughlyEquals(0, map.screenToSimY(150), tol);
    assertTrue(map.screenToSim(250, 150).nearEqual(Vector.ORIGIN, tol));
    simRect2 = map.screenToSimRect(screenRect2);
    assertTrue(simRect2.nearEqual(simRect1, tol));
    assertRoughlyEquals(250, map.simToScreenScaleX(10), tol);
    assertRoughlyEquals(150, map.simToScreenScaleY(10), tol);
    assertRoughlyEquals(10, map.screenToSimScaleX(250), tol);
    assertRoughlyEquals(10, map.screenToSimScaleY(150), tol);
    screenRect1 = new ScreenRect(0, 0, 300, 500);
    map = CoordMap.make(screenRect1, simRect1, "MIDDLE", "TOP");
    at = map.getAffineTransform();
    assertRoughlyEquals(scale, map.getScaleX(), tol);
    assertRoughlyEquals(scale, map.getScaleY(), tol);
    assertTrue(map.simToScreen(Vector.ORIGIN).nearEqual(new Vector(150, 150), tol));
    assertTrue(at.transform(Vector.ORIGIN).nearEqual(new Vector(150, 150), tol));
    assertRoughlyEquals(150, map.simToScreenX(0), tol);
    assertRoughlyEquals(150, map.simToScreenY(0), tol);
    assertTrue(at.transform(new Vector(10, 10)).nearEqual(new Vector(300, 0), tol));
    assertTrue(map.simToScreen(new Vector(10, 10)).nearEqual(new Vector(300, 0), tol));
    assertTrue(map.simToScreen(new Vector(10, -10)).nearEqual(new Vector(300, 300), tol));
    assertTrue(map.simToScreen(new Vector(-10, -10)).nearEqual(new Vector(0, 300), tol));
    assertTrue(map.simToScreen(new Vector(-10, 10)).nearEqual(new Vector(0, 0), tol));
    screenRect2 = map.simToScreenRect(simRect1);
    assertRoughlyEquals(0, screenRect2.getLeft(), tol);
    assertRoughlyEquals(0, screenRect2.getTop(), tol);
    assertRoughlyEquals(300, screenRect2.getWidth(), tol);
    assertRoughlyEquals(300, screenRect2.getHeight(), tol);
    assertRoughlyEquals(0, map.screenToSimX(150), tol);
    assertRoughlyEquals(0, map.screenToSimY(150), tol);
    assertTrue(map.screenToSim(150, 150).nearEqual(Vector.ORIGIN, tol));
    simRect2 = map.screenToSimRect(screenRect2);
    assertTrue(simRect2.nearEqual(simRect1));
    assertRoughlyEquals(150, map.simToScreenScaleX(10), tol);
    assertRoughlyEquals(150, map.simToScreenScaleY(10), tol);
    assertRoughlyEquals(10, map.screenToSimScaleX(150), tol);
    assertRoughlyEquals(10, map.screenToSimScaleY(150), tol);
    map = CoordMap.make(screenRect1, simRect1, "MIDDLE", "BOTTOM");
    at = map.getAffineTransform();
    assertRoughlyEquals(scale, map.getScaleX(), tol);
    assertRoughlyEquals(scale, map.getScaleY(), tol);
    assertTrue(map.simToScreen(Vector.ORIGIN).nearEqual(new Vector(150, 350), tol));
    assertTrue(at.transform(Vector.ORIGIN).nearEqual(new Vector(150, 350), tol));
    assertRoughlyEquals(150, map.simToScreenX(0), tol);
    assertRoughlyEquals(350, map.simToScreenY(0), tol);
    assertTrue(at.transform(new Vector(10, 10)).nearEqual(new Vector(300, 200), tol));
    assertTrue(map.simToScreen(new Vector(10, 10)).nearEqual(new Vector(300, 200), tol));
    assertTrue(map.simToScreen(new Vector(10, -10)).nearEqual(new Vector(300, 500), tol));
    assertTrue(map.simToScreen(new Vector(-10, -10)).nearEqual(new Vector(0, 500), tol));
    assertTrue(map.simToScreen(new Vector(-10, 10)).nearEqual(new Vector(0, 200), tol));
    screenRect2 = map.simToScreenRect(simRect1);
    assertRoughlyEquals(0, screenRect2.getLeft(), tol);
    assertRoughlyEquals(200, screenRect2.getTop(), tol);
    assertRoughlyEquals(300, screenRect2.getWidth(), tol);
    assertRoughlyEquals(300, screenRect2.getHeight(), tol);
    assertRoughlyEquals(0, map.screenToSimX(150), tol);
    assertRoughlyEquals(0, map.screenToSimY(350), tol);
    assertTrue(map.screenToSim(150, 350).nearEqual(Vector.ORIGIN, tol));
    simRect2 = map.screenToSimRect(screenRect2);
    assertTrue(simRect2.nearEqual(simRect1, tol));
    assertRoughlyEquals(150, map.simToScreenScaleX(10), tol);
    assertRoughlyEquals(150, map.simToScreenScaleY(10), tol);
    assertRoughlyEquals(10, map.screenToSimScaleX(150), tol);
    assertRoughlyEquals(10, map.screenToSimScaleY(150), tol);
    map = CoordMap.make(screenRect1, simRect1, "MIDDLE", "MIDDLE");
    at = map.getAffineTransform();
    assertRoughlyEquals(scale, map.getScaleX(), tol);
    assertRoughlyEquals(scale, map.getScaleY(), tol);
    assertTrue(map.simToScreen(Vector.ORIGIN).nearEqual(new Vector(150, 250), tol));
    assertTrue(at.transform(Vector.ORIGIN).nearEqual(new Vector(150, 250), tol));
    assertRoughlyEquals(150, map.simToScreenX(0), tol);
    assertRoughlyEquals(250, map.simToScreenY(0), tol);
    assertTrue(at.transform(new Vector(10, 10)).nearEqual(new Vector(300, 100), tol));
    assertTrue(map.simToScreen(new Vector(10, 10)).nearEqual(new Vector(300, 100), tol));
    assertTrue(map.simToScreen(new Vector(10, -10)).nearEqual(new Vector(300, 400), tol));
    assertTrue(map.simToScreen(new Vector(-10, -10)).nearEqual(new Vector(0, 400), tol));
    assertTrue(map.simToScreen(new Vector(-10, 10)).nearEqual(new Vector(0, 100), tol));
    screenRect2 = map.simToScreenRect(simRect1);
    assertRoughlyEquals(0, screenRect2.getLeft(), tol);
    assertRoughlyEquals(100, screenRect2.getTop(), tol);
    assertRoughlyEquals(300, screenRect2.getWidth(), tol);
    assertRoughlyEquals(300, screenRect2.getHeight(), tol);
    assertRoughlyEquals(0, map.screenToSimX(150), tol);
    assertRoughlyEquals(0, map.screenToSimY(250), tol);
    assertTrue(map.screenToSim(150, 250).nearEqual(Vector.ORIGIN, tol));
    assertTrue(map.screenToSim(new Vector(150, 250)).nearEqual(Vector.ORIGIN, tol));
    simRect2 = map.screenToSimRect(screenRect2);
    assertTrue(simRect2.nearEqual(simRect1, tol));
    assertRoughlyEquals(150, map.simToScreenScaleX(10), tol);
    assertRoughlyEquals(150, map.simToScreenScaleY(10), tol);
    assertRoughlyEquals(10, map.screenToSimScaleX(150), tol);
    assertRoughlyEquals(10, map.screenToSimScaleY(150), tol);
    assertThrows(() => map = CoordMap.make(screenRect1, simRect1, "MIDDLE", "MIDDLE", -1));
}
;
