// Copyright 2016 Erik Neumann.  All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the 'License');
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an 'AS IS' BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import { Printable } from "../util/Util.js"
import { Force } from "./Force.js"
import { MassObject } from "./MassObject.js"

/** Calculates {@link Force}'s on {@link MassObject}'s, for example gravity, damping,
spring force, etc.
*/
export interface ForceLaw extends Printable {

/** Returns a list of Forces generated by this ForceLaw.
* @return list of forces generated by this ForceLaw.
*/
calculateForces(): Force[];

/** Ensures this ForceLaw is not connected to anything and so can be garbage collected.
For example, if this ForceLaw is an {@link lab/util/Observe.Observer | Observer},
this will stop observing its Subject.
*/
disconnect(): void;

/** Returns list of MassObjects being affected by this ForceLaw.
* @return list of MassObjects being affected by this ForceLaw
*/
getBodies(): MassObject[];

/** Returns the potential energy due to this ForceLaw.
* @return the potential energy due to this ForceLaw
*/
getPotentialEnergy(): number;

}
